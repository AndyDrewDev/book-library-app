{"version":3,"file":"static/js/650.14b7632e.chunk.js","mappings":"yLAeA,MAgBMA,GAAWC,EAAAA,EAAAA,OAAKC,IAAiD,IAAhD,KAAEC,EAAI,MAAEC,EAAK,YAAEC,EAAW,aAAEC,GAAcJ,EAC/D,MAAMK,GAAWC,EAAAA,EAAAA,MAEXC,GAAmBC,EAAAA,EAAAA,cAAY,KACnCH,GAASI,EAAAA,EAAAA,IAAWR,EAAKS,IAAI,GAC5B,CAACL,EAAUJ,EAAKS,KAEbC,GAAuBH,EAAAA,EAAAA,cAAY,KACvCH,GAASO,EAAAA,EAAAA,IAAeX,EAAKS,IAAI,GAChC,CAACL,EAAUJ,EAAKS,KAEbG,GAAuBL,EAAAA,EAAAA,cAAY,CAACM,EAAMC,KAC9C,IAAKA,EACH,OAAOD,EAET,MAAME,EAAQ,IAAIC,OAAO,IAADC,OAAKH,EAAM,KAAK,MACxC,OAAOD,EAAKK,MAAMH,GAAOI,KAAI,CAACC,EAAWC,IACnCD,EAAUE,gBAAkBR,EAAOQ,eAEnCC,EAAAA,EAAAA,KAAA,QAAcC,UAAU,YAAWC,SAChCL,GADQC,GAKRD,GACP,GACD,IAEH,OACEM,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvBxB,EAAM,KAAGW,EAAqBZ,EAAK2B,MAAOzB,GAAa,MAAI,KAC5DqB,EAAAA,EAAAA,KAAA,UAAAE,SAASb,EAAqBZ,EAAK4B,OAAQzB,KAAuB,KACjEH,EAAK6B,OAAO,QAGfH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,QAAMO,QAASpB,EAAqBe,SACjCzB,EAAK+B,YACJR,EAAAA,EAAAA,KAACS,EAAAA,IAAkB,CAACR,UAAU,eAE9BD,EAAAA,EAAAA,KAACU,EAAAA,IAAc,CAACT,UAAU,iBAG9BD,EAAAA,EAAAA,KAAA,UAAQO,QAASxB,EAAiBmB,SAAC,gBAElC,IAIHS,EAAWA,KACf,MAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBnC,GAAckC,EAAAA,EAAAA,IAAYE,EAAAA,IAC1BnC,GAAeiC,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAmBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAE/BC,GAAgBC,EAAAA,EAAAA,UACpB,IAzEgBC,EAACT,EAAOjC,EAAaC,EAAcqC,IAC9CL,EAAMrB,QAAQd,IACnB,MAAM6C,EAAe7C,EAAK2B,MACvBL,cACAwB,SAAS5C,EAAYoB,eAElByB,EAAgB/C,EAAK4B,OACxBN,cACAwB,SAAS3C,EAAamB,eAEnB0B,GAAkBR,GAAmBxC,EAAK+B,WAEhD,OAAOc,GAAgBE,GAAiBC,CAAe,IA6DjDJ,CAAYT,EAAOjC,EAAaC,EAAcqC,IACpD,CAACL,EAAOjC,EAAaC,EAAcqC,IAGrC,OACEd,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACc,IAAjBU,EAAMc,QACL1B,EAAAA,EAAAA,KAAA,KAAAE,SAAG,wBAEHF,EAAAA,EAAAA,KAAA,MAAAE,SACGiB,EAAcvB,KAAI,CAACnB,EAAMqB,KACxBE,EAAAA,EAAAA,KAAC1B,EAAQ,CAEPG,KAAMA,EACNC,MAAOoB,EAAI,EACXnB,YAAaA,EACbC,aAAcA,GAJTH,EAAKS,UASd,EAIV,GAAeX,EAAAA,EAAAA,MAAKoC,E","sources":["components/BookList/BookList.js"],"sourcesContent":["import './BookList.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BsBookmarkStarFill, BsBookmarkStar } from 'react-icons/bs'\nimport { useCallback, useMemo, memo } from 'react'\nimport {\n  deleteBook,\n  toggleFavorite,\n  selectBooks,\n} from '../../redux/slices/booksSlice'\nimport {\n  selectTitleFilter,\n  selectAuthorFilter,\n  selectIsFavoriteFilter,\n} from '../../redux/slices/filterSlice'\n\nconst filterBooks = (books, titleFilter, authorFilter, isFavoriteFilter) => {\n  return books.filter((book) => {\n    const matchedTitle = book.title\n      .toLowerCase()\n      .includes(titleFilter.toLowerCase())\n\n    const matchedAuthor = book.author\n      .toLowerCase()\n      .includes(authorFilter.toLowerCase())\n\n    const matchesFavorite = isFavoriteFilter ? book.isFavorite : true\n\n    return matchedTitle && matchedAuthor && matchesFavorite\n  })\n}\n\nconst BookItem = memo(({ book, index, titleFilter, authorFilter }) => {\n  const dispatch = useDispatch()\n\n  const handleDeleteBook = useCallback(() => {\n    dispatch(deleteBook(book.id))\n  }, [dispatch, book.id])\n\n  const handleToggleFavorite = useCallback(() => {\n    dispatch(toggleFavorite(book.id))\n  }, [dispatch, book.id])\n\n  const highlightMatchedText = useCallback((text, filter) => {\n    if (!filter) {\n      return text\n    }\n    const regex = new RegExp(`(${filter})`, 'gi')\n    return text.split(regex).map((substring, i) => {\n      if (substring.toLowerCase() === filter.toLowerCase()) {\n        return (\n          <span key={i} className='highlight'>\n            {substring}\n          </span>\n        )\n      }\n      return substring\n    })\n  }, [])\n\n  return (\n    <li>\n      <div className='book-info'>\n        {index}. {highlightMatchedText(book.title, titleFilter)} by{' '}\n        <strong>{highlightMatchedText(book.author, authorFilter)}</strong> (\n        {book.source})\n      </div>\n\n      <div className='book-actions'>\n        <span onClick={handleToggleFavorite}>\n          {book.isFavorite ? (\n            <BsBookmarkStarFill className='star-icon' />\n          ) : (\n            <BsBookmarkStar className='star-icon' />\n          )}\n        </span>\n        <button onClick={handleDeleteBook}>Delete</button>\n      </div>\n    </li>\n  )\n})\n\nconst BookList = () => {\n  const books = useSelector(selectBooks)\n  const titleFilter = useSelector(selectTitleFilter)\n  const authorFilter = useSelector(selectAuthorFilter)\n  const isFavoriteFilter = useSelector(selectIsFavoriteFilter)\n\n  const filteredBooks = useMemo(\n    () => filterBooks(books, titleFilter, authorFilter, isFavoriteFilter),\n    [books, titleFilter, authorFilter, isFavoriteFilter]\n  )\n\n  return (\n    <div className='app-block book-list'>\n      <h2>Book List</h2>\n      {books.length === 0 ? (\n        <p>No books available</p>\n      ) : (\n        <ul>\n          {filteredBooks.map((book, i) => (\n            <BookItem\n              key={book.id}\n              book={book}\n              index={i + 1}\n              titleFilter={titleFilter}\n              authorFilter={authorFilter}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default memo(BookList)\n"],"names":["BookItem","memo","_ref","book","index","titleFilter","authorFilter","dispatch","useDispatch","handleDeleteBook","useCallback","deleteBook","id","handleToggleFavorite","toggleFavorite","highlightMatchedText","text","filter","regex","RegExp","concat","split","map","substring","i","toLowerCase","_jsx","className","children","_jsxs","title","author","source","onClick","isFavorite","BsBookmarkStarFill","BsBookmarkStar","BookList","books","useSelector","selectBooks","selectTitleFilter","selectAuthorFilter","isFavoriteFilter","selectIsFavoriteFilter","filteredBooks","useMemo","filterBooks","matchedTitle","includes","matchedAuthor","matchesFavorite","length"],"sourceRoot":""}