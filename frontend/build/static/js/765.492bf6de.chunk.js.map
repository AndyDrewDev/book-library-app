{"version":3,"file":"static/js/765.492bf6de.chunk.js","mappings":"uKAaA,MAAMA,EAASA,KACb,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAmBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAE/BC,GAA0BC,EAAAA,EAAAA,cAC7BC,IACCX,GAASY,EAAAA,EAAAA,IAAeD,EAAME,OAAOC,OAAO,GAE9C,CAACd,IAGGe,GAA2BL,EAAAA,EAAAA,cAC9BC,IACCX,GAASgB,EAAAA,EAAAA,IAAgBL,EAAME,OAAOC,OAAO,GAE/C,CAACd,IAGGiB,GAA+BP,EAAAA,EAAAA,cAAY,KAC/CV,GAASkB,EAAAA,EAAAA,MAAsB,GAC9B,CAAClB,IAEEmB,GAAqBT,EAAAA,EAAAA,cAAY,KACrCV,GAASoB,EAAAA,EAAAA,MAAe,GACvB,CAACpB,IAEJ,OACEqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLC,YAAY,qBACZZ,MAAOZ,EACPyB,SAAUlB,OAGdY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLC,YAAY,sBACZZ,MAAOT,EACPsB,SAAUZ,OAGdM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SACEI,KAAK,WACLG,QAASrB,EACToB,SAAUV,IACV,sBAINI,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASI,QAASV,EAAmBI,SAAC,cAIjD,EAIV,GAAeO,EAAAA,EAAAA,MAAK/B,E","sources":["components/Filter/Filter.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport { useCallback, memo } from 'react'\nimport {\n  setTitleFilter,\n  setAuthorFilter,\n  setIsFavoriteFilter,\n  selectTitleFilter,\n  selectAuthorFilter,\n  selectIsFavoriteFilter,\n  resetFilters,\n} from '../../redux/slices/filterSlice'\nimport './Filter.css'\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n  const titleFilter = useSelector(selectTitleFilter)\n  const authorFilter = useSelector(selectAuthorFilter)\n  const isFavoriteFilter = useSelector(selectIsFavoriteFilter)\n\n  const handleTitleFilterChange = useCallback(\n    (event) => {\n      dispatch(setTitleFilter(event.target.value))\n    },\n    [dispatch]\n  )\n\n  const handleAuthorFilterChange = useCallback(\n    (event) => {\n      dispatch(setAuthorFilter(event.target.value))\n    },\n    [dispatch]\n  )\n\n  const handleIsFavoriteFilterChange = useCallback(() => {\n    dispatch(setIsFavoriteFilter())\n  }, [dispatch])\n\n  const handleResetFilters = useCallback(() => {\n    dispatch(resetFilters())\n  }, [dispatch])\n\n  return (\n    <div className='app-block filter'>\n      <div className='filter-row'>\n        <div className='filter-group'>\n          <input\n            type='text'\n            placeholder='Filter by title...'\n            value={titleFilter}\n            onChange={handleTitleFilterChange}\n          />\n        </div>\n        <div className='filter-group'>\n          <input\n            type='text'\n            placeholder='Filter by author...'\n            value={authorFilter}\n            onChange={handleAuthorFilterChange}\n          />\n        </div>\n        <div className='filter-group'>\n          <label>\n            <input\n              type='checkbox'\n              checked={isFavoriteFilter}\n              onChange={handleIsFavoriteFilterChange}\n            />\n            Show favorite\n          </label>\n        </div>\n        <button type='button' onClick={handleResetFilters}>\n          Reset\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(Filter)\n"],"names":["Filter","dispatch","useDispatch","titleFilter","useSelector","selectTitleFilter","authorFilter","selectAuthorFilter","isFavoriteFilter","selectIsFavoriteFilter","handleTitleFilterChange","useCallback","event","setTitleFilter","target","value","handleAuthorFilterChange","setAuthorFilter","handleIsFavoriteFilterChange","setIsFavoriteFilter","handleResetFilters","resetFilters","_jsx","className","children","_jsxs","type","placeholder","onChange","checked","onClick","memo"],"sourceRoot":""}